{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchProductsData = createAsyncThunk('PRODUCTS/GET', async thunkAPI => {\n  const response = await axios.get(`http://localhost:1337/api/products?filters[category]=${thunkAPI.isPage}&populate=*`);\n  console.log(thunkAPI.number);\n  return response.data.data;\n}); // создаем асинхронную функцию, получаем ответ, возвращаем\n\n//создаем слайс\nexport const productsSlice = createSlice({\n  name: 'products',\n  // Название слайсла\n  initialState: {\n    products: []\n  },\n  //Начальное состояние\n  reducers: {},\n  // Внешнее действия\n  extraReducers: builder => {\n    builder.addCase(fetchProductsData.fulfilled, (state, action) => {\n      state.products = action.payload; //Данные, которые возвращаем в асинке\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchProductsData","thunkAPI","response","get","isPage","console","log","number","data","productsSlice","name","initialState","products","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload"],"sources":["/Users/li4nost/dev/hydroshop/src/redux/productsReducer.js"],"sourcesContent":["import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchProductsData = createAsyncThunk('PRODUCTS/GET', async (thunkAPI) => {\n    const response = await axios.get(`http://localhost:1337/api/products?filters[category]=${thunkAPI.isPage}&populate=*`)\n    console.log(thunkAPI.number)\n    return response.data.data\n})// создаем асинхронную функцию, получаем ответ, возвращаем\n\n//создаем слайс\nexport const productsSlice = createSlice({\n    name: 'products', // Название слайсла\n    initialState: {\n        products: []\n    }, //Начальное состояние\n    reducers: {},// Внешнее действия\n    extraReducers: (builder) => {\n        builder.addCase(fetchProductsData.fulfilled, (state, action) => {\n            state.products = action.payload //Данные, которые возвращаем в асинке\n        })\n    }\n})\n\n\n\n"],"mappings":"AAAA,SAAQA,gBAAgB,EAAEC,WAAW,QAAO,kBAAkB;AAC9D,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,iBAAiB,GAAGH,gBAAgB,CAAC,cAAc,EAAE,MAAOI,QAAQ,IAAK;EAClF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,wDAAuDF,QAAQ,CAACG,MAAO,aAAY,CAAC;EACtHC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACM,MAAM,CAAC;EAC5B,OAAOL,QAAQ,CAACM,IAAI,CAACA,IAAI;AAC7B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAAC;EACrCY,IAAI,EAAE,UAAU;EAAE;EAClBC,YAAY,EAAE;IACVC,QAAQ,EAAE;EACd,CAAC;EAAE;EACHC,QAAQ,EAAE,CAAC,CAAC;EAAC;EACbC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAChB,iBAAiB,CAACiB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5DD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO,EAAC;IACpC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}